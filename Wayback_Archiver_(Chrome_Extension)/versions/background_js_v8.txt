chrome.webNavigation.onCompleted.addListener((details) => {
  if (details.frameId !== 0) return;

  const url = new URL(details.url);
  const hostname = url.hostname;

  // Blocklist check
  const BLOCKLIST = ["accounts.google.com", "youtube.com", "facebook.com"];
  if (BLOCKLIST.some(blocked => hostname.includes(blocked))) {
    console.log(`[Wayback] Skipped (blocklisted): ${url.href}`);
    return;
  }

  chrome.storage.sync.get("autoArchiveEnabled", (data) => {
    if (!data.autoArchiveEnabled) return;

    // Ask for confirmation from the content script
    chrome.tabs.sendMessage(details.tabId, { type: "askToArchive" }, (response) => {
      if (!chrome.runtime.lastError && response?.confirmed) {
        const archiveUrl = `https://web.archive.org/save/${encodeURIComponent(url.href)}`;
        chrome.tabs.create({ url: archiveUrl });
        console.log(`[Wayback] Archived: ${url.href}`);

        chrome.storage.local.get(["archiveHistory"], (result) => {
          let archiveHistory = result.archiveHistory || [];
          archiveHistory.push({
            url: url.href,
            time: new Date().toISOString()
          });
          chrome.storage.local.set({ archiveHistory });
        });
      } else {
        console.log(`[Wayback] Skipped by user: ${url.href}`);
      }
    });
  });
}, {
  url: [{ schemes: ["http", "https"] }]
});
